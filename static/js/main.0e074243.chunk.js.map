{"version":3,"sources":["components/Friends/Friend/Friend.module.css","components/Sidebar/Sidebar.module.css","components/Users/users.module.css","components/common/preloader/preloader.module.css","components/Login/Login.module.css","components/Messages/Messages.module.css","serviceWorker.js","redux/MessagesPagesReducer.js","components/Messages/Message/Message.jsx","components/Messages/DialogItem/DialogsItem.jsx","components/common/FormsControl/FormsControl.js","utils/vlidators/validators.js","components/Messages/Messages.jsx","hoc/AuthRedirect.js","components/Messages/MessagesContainer.jsx","components/Friends/Friend/Friend.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/Friends/Friends.jsx","components/Friends/FriendsContainer.jsx","components/common/Paginator/Paginator.js","components/Users/User.jsx","components/Users/Users.jsx","api/api.js","utils/objectHelpers.js","redux/UsersPageReducer.js","components/common/preloader/preloader.jsx","redux/UsersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/ProfilePageReducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/AuthReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/AppReducer.js","redux/SidebarReducer.js","redux/reduxStore.js","App.js","index.js","components/Profile/MyPosts/Post/Post.module.css","assets/images/user.png","components/common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","DialogsData","name","id","MessagesData","message","MessagesReducer","state","action","type","newMessage","newMessageBody","Message","props","className","Style","DialogItem","path","Item","to","activeClassName","active","TextArea","input","meta","hasError","touched","error","Input","required","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","component","placeholder","validate","Messages","DialogsElements","map","d","MessagesElements","m","dialogs","dialogsItems","messages","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","AuthRedirect","Component","RedirectComponent","this","React","connect","compose","messagesPage","sendMessageActionCreator","Friend","friend","src","alt","Sidebar","FriendsElement","friendsData","f","nav","link","friends","SidebarContainer","sidebar","Friends","FriendsContainer","Paginator","currentPage","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","selectPage","key","e","User","user","followingInProgress","unfollowUser","followUser","photos","small","userPhoto","followed","disabled","some","status","Users","totalUsersCount","users","u","instance","axios","withCredentials","baseURL","headers","usersAPI","get","then","response","data","followAPI","delete","post","profileAPI","userId","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","follow","unfollow","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","UsersReducers","Preloader","lds_roller","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","setCurrentPage","totalCount","bind","useEffect","pageNumber","ProfileStatusWithHooks","editMode","setEditMode","setStatus","autoFocus","onBlur","updateStatus","onChange","currentTarget","ProfileInfo","profile","content","AvatarAndDescription","large","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","lookingForAJob","lookingForAJobDescription","postData","likesCount","ProfileReducer","newPost","newPostElement","Post","button","likes","maxLength10","AddPostReduxForm","MyPosts","postElement","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","autorizedId","getProfile","getStatus","withRouter","history","params","Header","s","header","loginBlock","login","logout","setAuthUserData","getAuthUser","AuthReducer","LoginReduxForm","stopSubmit","_error","formData","initialized","AppReducer","SidebarReducer","reducers","combineReducers","fromReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Music","lazy","Settings","News","AppContainer","initializeApp","promise","render","MessagesContainer","fallback","MainApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0e074243.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2u-CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__3tK8V\",\"link\":\"Sidebar_link__1QDzM\",\"active\":\"Sidebar_active__h1Sbz\",\"friends\":\"Sidebar_friends__2cw99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2KApp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"preloader_lds_roller__2aKZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__2Jrmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__3aWY9\",\"dialogsItems\":\"Messages_dialogsItems__2xIb5\",\"Item\":\"Messages_Item__1Ol4C\",\"active\":\"Messages_active__3Jn-D\",\"message\":\"Messages_message__Ml8ZX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    DialogsData: [\r\n        {name: \"Dima\", id: \"2\"},\r\n        {name: \"Vasya\", id: \"3\"},\r\n        {name: \"Gordon\", id: \"4\"},\r\n        {name: \"Vladimir\", id: \"5\"}\r\n    ],\r\n    MessagesData: [\r\n        {message: \"Hello\"},\r\n        {message: \"Hello, it's my first message\"},\r\n        {message: \"Lokolokolkol\"},\r\n\r\n    ]\r\n};\r\n\r\nconst MessagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default MessagesReducer;","import React from \"react\";\r\nimport Style from \"./../Messages.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={Style.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport Style from \"./../Messages.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n       return <div className={Style.Item}>\r\n            <NavLink to={path} activeClassName={Style.active}>{props.name}</NavLink>\r\n        </div>\r\n\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport Style from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/vlidators/validators\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n\r\n    let DialogsElements = props.DialogsData.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let MessagesElements = props.MessagesData.map(m => <Message message={m.message}/>)\r\n\r\n\r\n    const AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={Style.dialogs}>\r\n                <div className={Style.dialogsItems}>\r\n\r\n                    {DialogsElements}\r\n\r\n                </div>\r\n                <div className={Style.messages}>\r\n                    <div>{MessagesElements}</div>\r\n\r\n                    <AddMessageReduxForm onSubmit={AddNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field component={TextArea}\r\n                   name={\"newMessageBody\"}\r\n                   placeholder={\"Enter your message\"}\r\n                   validate={[required, maxLength100]}\r\n            />\r\n                <button>Send</button>\r\n        </form>\r\n)\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('AddMessageForm'));\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'AddMessageForm',\r\n    onSubmitSuccess: afterSubmit,\r\n})(AddMessageForm)\r\n\r\nexport default Messages;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const AuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConndectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConndectedRedirectComponent\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/MessagesPagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.messagesPage.DialogsData,\r\n        MessagesData: state.messagesPage.MessagesData,\r\n        newMessageBody: state.messagesPage.newMessageBody,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirect\r\n)(Messages)","import React from \"react\";\r\nimport Style from \"./Friend.module.css\"\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n\r\n    return (\r\n       <div className={Style.friend}>\r\n           <img src=\"https://vignette.wikia.nocookie.net/avatar/images/1/1b/%D0%9A1%D1%8501_%D0%9A%D0%BE%D1%80%D1%80%D0%B0_%D0%BF%D0%BE%D1%80%D1%82%D1%80%D0%B5%D1%82.jpg/revision/latest?cb=20160308145916&path-prefix=ru\" alt=\"\"/>\r\n\r\n           {props.name}\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport Style from \"./Sidebar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"../Friends/Friend/Friend\";\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let FriendsElement = props.friendsData.map(f => <Friend name={f.name}/>);\r\n\r\n    return (\r\n        <nav className={Style.nav}>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/profile\" activeClassName={Style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/messages\" activeClassName={Style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/users\" activeClassName={Style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/news\" activeClassName={Style.active}>News</NavLink>\r\n            </div>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/music\" activeClassName={Style.active}>Music</NavLink>\r\n            </div>\r\n            <div className={Style.link}>\r\n                <NavLink to=\"/settings\" activeClassName={Style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={`${Style.link} + ${Style.friends}`}>\r\n                <NavLink to=\"/friends\" activeClassName={Style.active}>Friends</NavLink>\r\n                {FriendsElement}\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n\r\nexport default SidebarContainer;","import React from \"react\";\r\n\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    let FriendsElement = props.friendsData.map(f => <Friend name={f.name}/>);\r\n\r\n    return (\r\n       <div>\r\n           {FriendsElement}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends)\r\n\r\n\r\nexport default FriendsContainer;","import styles from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst Paginator = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className={currentPage === p && styles.selectPage} key={p} onClick={(e) => {\r\n                    onPageChanged(p);\r\n                }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>}\r\n\r\n    </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollowUser, followUser}) => {\r\n    return <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\"\r\n                             className={styles.userPhoto}/>\r\n                             </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            user.followed\r\n                                ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              unfollowUser(user.id)\r\n                                          }}>\r\n                                    Unfollow</button>\r\n\r\n                                : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              followUser(user.id)\r\n                                          }}>\r\n                                    Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                             <div>{\"user.location.country\"}</div>\r\n                             <div>{\"user.location.city\"}</div>\r\n                         </span>\r\n\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n        {\r\n            props.users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                                       unfollowUser={props.unfollowUser} followUser={props.followUser}/>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"085d8bea-09cb-43a3-9bc5-5b7b76e2e1d4\"\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n\r\n    },\r\n    loginUser(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logoutUser(id) {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {followAPI, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst UsersReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id));\r\n}\r\n\r\nexport const unfollowUser = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        followUnfollowFlow(dispatch, id, followAPI.unfollowUser.bind(followAPI), unfollow)\r\n    }\r\n}\r\n\r\nexport const followUser = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        followUnfollowFlow(dispatch, id, followAPI.followUser.bind(followAPI), follow)\r\n    }\r\n}\r\n\r\n\r\nexport default UsersReducers;","import React from \"react\";\r\nimport styles from \"./preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return <div className={styles.lds_roller}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followUser, requestUsers,\r\n\r\n    setCurrentPage,\r\n    unfollowUser\r\n} from \"../../redux/UsersPageReducer\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/UsersSelectors\";\r\n\r\n\r\nconst UsersContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        const {currentPage, pageSize} = props\r\n        props.getUsers(currentPage, pageSize);\r\n    }, [props.currentPage])\r\n\r\n\r\n   const onPageChanged = (pageNumber) => {\r\n\r\n        props.setCurrentPage(pageNumber);\r\n\r\n        props.getUsers(pageNumber, props.pageSize);\r\n\r\n    }\r\n\r\n        return <>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={props.totalUsersCount}\r\n                   pageSize={props.pageSize}\r\n                   currentPage={props.currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   users={props.users}\r\n                   follow={props.follow}\r\n                   unfollow={props.unfollow}\r\n                   toggleFollowingProgress={props.toggleFollowingProgress}\r\n                   followingInProgress={props.followingInProgress}\r\n                   followUser={props.followUser}\r\n                   unfollowUser={props.unfollowUser}\r\n\r\n\r\n            />\r\n        </>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setCurrentPage, getUsers: requestUsers, followUser, unfollowUser}),\r\n    AuthRedirect\r\n)(UsersContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },\r\n        [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}  value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                state: this.props.state\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport Style from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"../ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <div><img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTA3_Po1WAynqwcS6GtqJ9Ay-XeEfjXkqBp7qcUh-4Y_4U-w64D\"\r\n                alt=\"\"/></div>\r\n            <div className={Style.AvatarAndDescription}>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <br/>\r\n                <br/>\r\n                <div>Name: {props.profile.fullName}</div>\r\n                <div>aboutMe: {props.profile.aboutMe}</div>\r\n                <div>{props.profile.contacts.facebook}</div>\r\n                <div>{props.profile.contacts.website}</div>\r\n                <div>{props.profile.contacts.vk}</div>\r\n                <div>{props.profile.contacts.twitter}</div>\r\n                <div>{props.profile.contacts.instagram}</div>\r\n                <div>{props.profile.contacts.youtube}</div>\r\n                <div>{props.profile.contacts.github}</div>\r\n                <div>{props.profile.lookingForAJob}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {message: \"It's my first post\", likesCount: \"456\"},\r\n        {message: \"Olelelelelel1\", likesCount: \"50\"},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                message: action.newPostElement,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const addPostActionCreator = (newPostElement) => ({type: ADD_POST, newPostElement});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer;","import React from \"react\";\r\nimport Style from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={Style.post}>\r\n            <img src=\"https://i.ytimg.com/vi/fUWrhetZh9M/maxresdefault.jpg\" alt=\"\"/>\r\n\r\n\r\n            <span className={Style.message}> {props.message} </span> <br/>\r\n\r\n\r\n            <button className={Style.button}>Like</button>\r\n            <span className={Style.likes}>{props.likes}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Style from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/vlidators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postElement = props.postData.map(m => <Post message={m.message} likes={m.likesCount}/>);\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostElement);\r\n    };\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <div>\r\n\r\n                <AddPostReduxForm onSubmit={AddNewPost}/>\r\n\r\n            </div>\r\n            <div>\r\n                {postElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field name={\"newPostElement\"}\r\n                   placeholder={\"Enter your text\"}\r\n                   component={TextArea}\r\n                   validate={[required, maxLength10]}\r\n            />\r\n\r\n            <button className={Style.button}>Add Post</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('AddPostForm'));\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'AddPostForm',\r\n    onSubmitSuccess: afterSubmit,\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/ProfilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n    }\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostElement) => {\r\n           dispatch(addPostActionCreator(newPostElement));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapStateToDispatch)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Style from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/ProfilePageReducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/ProfilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst ProfileContainer = ({autorizedId, history, match, getProfile, getStatus, status, profile, updateStatus,}) => {\r\n\r\nuseEffect(() => {\r\n    let userId = match.params.userId;\r\n    if (!userId) {\r\n        userId = autorizedId;\r\n        if (!userId) {\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    getProfile(userId);\r\n    getStatus(userId);\r\n}, [match.params.userId])\r\n\r\n\r\n\r\n    return (\r\n        <Profile profile={profile} status={status} updateStatus={updateStatus}/>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedId: state.auth.id\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://pngimg.com/uploads/google/google_PNG19644.png\" alt=\"\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                ? <div>{props.login}, {props.email} - <button onClick={props.logout}>Log Out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\n\r\n\r\nexport const getAuthUser = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.loginUser(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUser())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logoutUser()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/AuthReducer\";\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n    return <Header {...props}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    email: state.auth.email,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/vlidators/validators\";\r\nimport {login} from \"../../redux/AuthReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"}\r\n                       placeholder={\"email\"}\r\n                       component={Input}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       placeholder={\"password\"}\r\n                       component={Input}\r\n                       validate={[required]}\r\n                       type={\"password\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"}\r\n                       type={\"checkbox\"}\r\n                       component={Input}\r\n                /> <span>remember me</span>\r\n            </div>\r\n            <div>\r\n                {error && <div className={s.error}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('login'));\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n    onSubmitSuccess: afterSubmit,\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUser} from \"./AuthReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUser())\r\n    await promise\r\n    dispatch(initializedSuccess())\r\n\r\n\r\n}\r\n\r\n\r\nexport default AppReducer;","\r\nlet initialState = {\r\n    friendsData: [\r\n        {name: \"Dima\"},\r\n        {name: \"Vasya\"},\r\n        {name: \"Gordon\"},\r\n        {name: \"Vladimir\"}\r\n    ]\r\n\r\n};\r\n\r\n\r\nconst SidebarReducer = (state = initialState, action) => {\r\nreturn state\r\n};\r\n\r\nexport default SidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfilePageReducer\";\r\nimport MessagesReducer from \"./MessagesPagesReducer\";\r\nimport SidebarReducer from \"./SidebarReducer\";\r\nimport UsersReducers from \"./UsersPageReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as fromReducer} from 'redux-form'\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    messagesPage: MessagesReducer,\r\n    sidebar: SidebarReducer,\r\n    usersPage: UsersReducers,\r\n    auth: AuthReducer,\r\n    form: fromReducer,\r\n    app: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React, {Suspense, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/AppReducer\";\nimport Preloader from \"./components/common/preloader/preloader\";\nimport store from \"./redux/reduxStore\";\n\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\nconst Settings = React.lazy(() => import (\"./components/Settings/Settings\"));\nconst News = React.lazy(() => import (\"./components/News/News\"));\n\nconst App = ({initializeApp, initialized}) => {\n\n    useEffect(() => {\n        initializeApp()\n    }, [initializeApp])\n\n    if (!initialized) {\n        return <Preloader/>\n    }\n\n    return (\n\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <SidebarContainer/>\n            <div className=\"app-wrapper-content\">\n                <Route path='/profile/:userId?'\n                       render={() => <ProfileContainer/>}/>\n\n                <Route path='/messages'\n                       render={() => <MessagesContainer/>}/>\n\n                <Route path='/news'\n                       render={() => <Suspense fallback={<Preloader/>}>\n                           <News/>\n                       </Suspense>}/>\n\n                <Route path='/music'\n                       render={() => <Suspense fallback={<Preloader/>}>\n                           <Music/>\n                       </Suspense>}/>\n\n                <Route path='/settings'\n                       render={() => <Suspense fallback={<Preloader/>}>\n                           <Settings/>\n                       </Suspense>}/>\n\n                <Route path='/friends'\n                       render={() => <FriendsContainer/>}/>\n\n                <Route path='/users'\n                       render={() => <UsersContainer/>}/>\n\n                <Route path='/login'\n                       render={() => <LoginPage/>}/>\n            </div>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <MainApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__14LW4\",\"likes\":\"Post_likes__1-SBD\",\"button\":\"Post_button__bDfp2\",\"message\":\"Post_message__3Oyep\"};","module.exports = __webpack_public_path__ + \"static/media/user.129ab51c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__2SMEa\",\"paginator\":\"Paginator_paginator__2_-tA\",\"pageNumber\":\"Paginator_pageNumber__3Hz1B\",\"selectedPage\":\"Paginator_selectedPage__265NH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AvatarAndDescription\":\"ProfileInfo_AvatarAndDescription__3yGEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3mpC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tiayS\",\"loginBlock\":\"Header_loginBlock__3PvLE\"};"],"sourceRoot":""}