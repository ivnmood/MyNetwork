{"version":3,"sources":["assets/images/user.png","components/Login/Login.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Friends/Friend/Friend.module.css","components/common/preloader/preloader.module.css","components/common/Paginator/Paginator.module.css","components/Messages/Messages.module.css","serviceWorker.js","components/Friends/Friend/Friend.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/Header/Header.jsx","api/api.js","redux/AuthReducer.js","components/Header/HeaderContainer.jsx","components/common/preloader/preloader.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/common/FormsControl/FormsControl.js","components/Profile/ProfileInfo/ProfileForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/ProfilePageReducer.js","components/Profile/MyPosts/Post/Post.jsx","utils/vlidators/validators.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","hoc/AuthRedirect.js","components/Profile/ProfileContainer.jsx","redux/MessagesPagesReducer.js","components/Messages/Message/Message.jsx","components/Messages/DialogItem/DialogsItem.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","components/Friends/Friends.jsx","components/Friends/FriendsContainer.jsx","components/common/Paginator/Paginator.js","components/Users/User.jsx","components/Users/Users.jsx","utils/objectHelpers.js","redux/UsersPageReducer.js","redux/UsersSelectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/AppReducer.js","redux/SidebarReducer.js","redux/reduxStore.js","App2.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebar/Sidebar.module.css","components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Friend","props","className","Style","friend","src","alt","name","Sidebar","friendsData","map","f","theme","mode","defaultSelectedKeys","Item","key","icon","LineOutlined","to","activeClassName","active","SidebarContainer","connect","state","sidebar","Header","s","header","loginBlock","isAuth","loginBlockInfo","login","type","onClick","logout","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","followAPI","unfollowUser","id","delete","followUser","post","profileAPI","userId","status","put","profile","photoFile","formData","FormData","append","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","captchaUrl","setAuthUserData","getCaptchaSuccess","getAuthUser","dispatch","a","resultCode","getCaptchaUrl","url","AuthReducer","action","auth","Preloader","loader","LoadingOutlined","StatusWithoutEditMode","activateEditMode","StatusWithEditMode","deactivateEditMode","onStatusChange","autoFocus","onBlur","onChange","value","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","isOwner","updateStatus","e","currentTarget","TextArea","input","meta","hasError","touched","error","Input","ProfileReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","validate","Object","keys","contacts","contact","ProfileData","goToEditMode","AvatarAndDescription","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","photos","large","userPhoto","ImageButton","target","files","length","savePhoto","initialValues","saveProfile","postData","message","likesCount","getProfile","ProfileReducer","newPost","newPostElement","Post","button","likes","required","maxLengthCreator","maxLength","maxLength10","AddPostReduxForm","onSubmitSuccess","result","reset","MyPosts","postElement","m","content","values","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","mapStateToPropsForRedirect","AuthRedirect","Component","RedirectComponent","this","React","ProfileContainer","params","autorizedId","history","push","getStatus","refreshProfile","prevProps","prevState","snapshot","PureComponent","compose","file","getState","stopSubmit","_error","messages","Promise","reject","withRouter","DialogsData","MessagesData","MessagesReducer","newMessage","newMessageBody","Message","DialogItem","path","maxLength100","AddMessageReduxForm","Messages","DialogsElements","d","MessagesElements","dialogs","dialogsItems","sendMessage","messagesPage","sendMessageActionCreator","Friends","FriendsElement","FriendsContainer","Paginator","totalItemsCount","onPageChanged","style","pagination","simple","defaultCurrent","total","current","defaultPageSize","User","user","followingInProgress","styles","userInfo","small","followed","disabled","some","Users","totalUsersCount","users","u","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","follow","unfollow","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","UsersReducers","filter","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","setCurrentPage","totalCount","bind","pageNumber","LoginReduxForm","initialized","AppReducer","SidebarReducer","reducers","combineReducers","fromReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Music","lazy","Settings","News","Layout","Content","Footer","Sider","AppContainer","initializeApp","promise","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","padding","margin","minHeight","render","MessagesContainer","fallback","exact","from","textAlign","MainApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ab360934.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.129ab51c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__2Jrmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Header_loginBlock__3PvLE\",\"loginBlockInfo\":\"Header_loginBlockInfo__1eSjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3mpC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2u-CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"preloader_loader__Rjbiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__2SMEa\",\"paginator\":\"Paginator_paginator__2_-tA\",\"pageNumber\":\"Paginator_pageNumber__3Hz1B\",\"selectedPage\":\"Paginator_selectedPage__265NH\",\"pagination\":\"Paginator_pagination__2OVDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__3aWY9\",\"dialogsItems\":\"Messages_dialogsItems__2xIb5\",\"Item\":\"Messages_Item__1Ol4C\",\"active\":\"Messages_active__3Jn-D\",\"message\":\"Messages_message__Ml8ZX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport Style from \"./Friend.module.css\"\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n\r\n    return (\r\n       <div className={Style.friend}>\r\n           <img src=\"https://vignette.wikia.nocookie.net/avatar/images/1/1b/%D0%9A1%D1%8501_%D0%9A%D0%BE%D1%80%D1%80%D0%B0_%D0%BF%D0%BE%D1%80%D1%82%D1%80%D0%B5%D1%82.jpg/revision/latest?cb=20160308145916&path-prefix=ru\" alt=\"\"/>\r\n\r\n           {props.name}\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport Style from \"./Sidebar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"../Friends/Friend/Friend\";\r\nimport {\r\n    LineOutlined,\r\n} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport {Menu} from \"antd\";\r\n\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let FriendsElement = props.friendsData.map(f => <Friend name={f.name}/>);\r\n\r\n    return (\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/profile\" activeClassName={Style.active}>Profile</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/messages\" activeClassName={Style.active}>Messages</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/users\" activeClassName={Style.active}>Users</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/news\" activeClassName={Style.active}>News</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/music\" activeClassName={Style.active}>Music</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"6\" icon={<LineOutlined />}>\r\n                <NavLink to=\"/settings\" activeClassName={Style.active}>Settings</NavLink>\r\n            </Menu.Item>\r\n        </Menu>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // <nav className={Style.nav}>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/profile\" activeClassName={Style.active}>Profile</NavLink>\r\n        //     </div>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/messages\" activeClassName={Style.active}>Messages</NavLink>\r\n        //     </div>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/users\" activeClassName={Style.active}>Users</NavLink>\r\n        //     </div>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/news\" activeClassName={Style.active}>News</NavLink>\r\n        //     </div>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/music\" activeClassName={Style.active}>Music</NavLink>\r\n        //     </div>\r\n        //     <div className={Style.link}>\r\n        //         <NavLink to=\"/settings\" activeClassName={Style.active}>Settings</NavLink>\r\n        //     </div>\r\n        //     <div className={`${Style.link} + ${Style.friends}`}>\r\n        //         <NavLink to=\"/friends\" activeClassName={Style.active}>Friends</NavLink>\r\n        //         {FriendsElement}\r\n        //     </div>\r\n        // </nav>\r\n    )\r\n};\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n\r\nexport default SidebarContainer;","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { Button } from 'antd';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                ? <div> <strong className={s.loginBlockInfo}>{props.login}</strong> - <Button type=\"link\" onClick={props.logout}>Log Out</Button></div>\r\n                : <NavLink to={'/login'}> <Button type=\"link\" >Login</Button></NavLink>\r\n            }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"7178d77c-d634-460c-94ef-2f90ebb75b52\"\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append(\"data\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n\r\n    },\r\n    loginUser(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logoutUser() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\nexport const getCaptchaSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, captchaUrl})\r\n\r\nexport const getAuthUser = () => async (dispatch) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        const {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.loginUser(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUser())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () =>\r\n    async (dispatch) => {\r\n        const response = await securityAPI.getCaptchaUrl()\r\n        const captchaUrl = response.data.url\r\n        dispatch(getCaptchaSuccess(captchaUrl))\r\n    }\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.logoutUser()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/AuthReducer\";\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n    return <Header {...props}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer);","import React from \"react\";\r\nimport {\r\n    LoadingOutlined,\r\n} from '@ant-design/icons';\r\nimport s from \"./preloader.module.css\"\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <LoadingOutlined/>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n            setStatus(props.status)\r\n        },\r\n        [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <StatusWithoutEditMode activateEditMode={activateEditMode} status={props.status}/>\r\n            }\r\n            {editMode && props.isOwner &&\r\n            <StatusWithEditMode deactivateEditMode={deactivateEditMode} status={status}\r\n                                onStatusChange={onStatusChange}/>\r\n            }\r\n            {editMode && !props.isOwner &&\r\n            <StatusWithoutEditMode activateEditMode={activateEditMode} status={props.status}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet StatusWithoutEditMode = ({activateEditMode, ...props}) => {\r\n    return (\r\n        <div>\r\n            <b>Status: </b> <span onClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n        </div>\r\n    )\r\n}\r\nlet StatusWithEditMode = ({deactivateEditMode, onStatusChange, status}) => {\r\n    return (\r\n        <div>\r\n            <b>Status: </b> <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                                   value={status}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import Style from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, TextArea} from \"../../common/FormsControl/FormsControl\";\r\nimport s from \"../../Login/Login.module.css\";\r\n\r\nconst ProfileForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {error && <div className={s.error}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <b>Full Name: </b>\r\n                <Field name={\"fullName\"}\r\n                       placeholder={\"Full Name\"}\r\n                       component={Input}\r\n                       validate={[]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <b>aboutMe: </b>\r\n                <Field name={\"aboutMe\"}\r\n                       placeholder={\"About Me\"}\r\n                       component={TextArea}\r\n                       validate={[]}\r\n                /></div>\r\n            <div>\r\n                <b>look for work: </b>\r\n                <Field name={\"lookingForAJob\"}\r\n                       type={\"checkbox\"}\r\n                       component={Input}\r\n                /></div>\r\n            <div>\r\n                <b>Skills: </b>\r\n                <Field name={\"lookingForAJobDescription\"}\r\n                       placeholder={\"skills\"}\r\n                       component={TextArea}\r\n                       validate={[]}\r\n                /></div>\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={Style.contact}>\r\n                    <b>{key}:  <Field name={\"contacts.\" + key}\r\n                                      placeholder={key}\r\n                                      component={Input}/>\r\n                    </b>\r\n                </div>\r\n            })}\r\n            </div>\r\n            <div>\r\n                <button >Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ProfileReduxForm = reduxForm({\r\n    form: 'editProfile',\r\n})(ProfileForm)\r\n\r\nexport default ProfileReduxForm","import React, {useState} from \"react\";\r\nimport Style from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotosSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={Style.ProfileInfo}>\r\n            <div>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} alt=\"\"/>\r\n                <br/>\r\n                <div className={Style.ImageButton}>\r\n                    {props.isOwner && <input type={\"file\"} onChange={onMainPhotosSelected}/>}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}\r\n                                        isOwner={props.isOwner}/>\r\n                {editMode\r\n                    ? <ProfileForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}\r\n                                   profile={props.profile}\r\n                                   isOwner={props.isOwner}/>}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={Style.AvatarAndDescription}>\r\n\r\n\r\n        <div><b>Name: </b> {profile.fullName}</div>\r\n        <div><b>aboutMe: </b> {profile.aboutMe}</div>\r\n        <div><b>look for work: </b>{profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n        <div><b>Skills: </b>{profile.lookingForAJobDescription}</div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={Style.contact}><b>{contactTitle}: </b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {message: \"It's my first post\", likesCount: \"456\"},\r\n        {message: \"Olelelelelel1\", likesCount: \"50\"},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                message: action.newPostElement,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const addPostActionCreator = (newPostElement) => ({type: ADD_POST, newPostElement});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer;","import React from \"react\";\r\nimport Style from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={Style.post}>\r\n            <img src=\"https://i.ytimg.com/vi/fUWrhetZh9M/maxresdefault.jpg\" alt=\"\"/>\r\n            <span className={Style.message}> {props.message} </span> <br/>\r\n            <button className={Style.button}>Like</button>\r\n            <span className={Style.likes}>{props.likes}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport Style from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/vlidators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postElement = props.postData.map(m => <Post key={m} message={m.message} likes={m.likesCount}/>);\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostElement);\r\n    };\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <div>\r\n<b><h1>My Posts:</h1></b>\r\n                <AddPostReduxForm onSubmit={AddNewPost}/>\r\n\r\n            </div>\r\n            <div>\r\n                {postElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field name={\"newPostElement\"}\r\n                   placeholder={\"Enter your text\"}\r\n                   component={TextArea}\r\n                   validate={[required, maxLength10]}\r\n            />\r\n\r\n            <button className={Style.button}>Add Post</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('AddPostForm'));\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'AddPostForm',\r\n    onSubmitSuccess: afterSubmit,\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/ProfilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n    }\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostElement) => {\r\n           dispatch(addPostActionCreator(newPostElement));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapStateToDispatch)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Style from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/ProfilePageReducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <ProfileInfo saveProfile={props.saveProfile}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const AuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConndectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConndectedRedirectComponent\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/ProfilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto}\r\n                     isAuth={this.props.isAuth}\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorizedId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    AuthRedirect\r\n)(ProfileContainer)","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    DialogsData: [\r\n        {name: \"Dima\", id: \"2\"},\r\n        {name: \"Vasya\", id: \"3\"},\r\n        {name: \"Gordon\", id: \"4\"},\r\n        {name: \"Vladimir\", id: \"5\"}\r\n    ],\r\n    MessagesData: [\r\n        {message: \"Hello\"},\r\n        {message: \"Hello, it's my first message\"},\r\n        {message: \"Lokolokolkol\"},\r\n\r\n    ]\r\n};\r\n\r\nconst MessagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default MessagesReducer;","import React from \"react\";\r\nimport Style from \"./../Messages.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={Style.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport Style from \"./../Messages.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n       return <div className={Style.Item}>\r\n            <NavLink to={path} activeClassName={Style.active}>{props.name}</NavLink>\r\n        </div>\r\n\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport Style from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/vlidators/validators\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n\r\n    let DialogsElements = props.DialogsData.map(d => <DialogItem key={d} name={d.name} id={d.id}/>)\r\n    let MessagesElements = props.MessagesData.map(m => <Message key={m} message={m.message}/>)\r\n\r\n\r\n    const AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={Style.dialogs}>\r\n                <div className={Style.dialogsItems}>\r\n\r\n                    {DialogsElements}\r\n\r\n                </div>\r\n                <div className={Style.messages}>\r\n                    <div>{MessagesElements}</div>\r\n\r\n                    <AddMessageReduxForm onSubmit={AddNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field component={TextArea}\r\n                   name={\"newMessageBody\"}\r\n                   placeholder={\"Enter your message\"}\r\n                   validate={[required, maxLength100]}\r\n            />\r\n                <button>Send</button>\r\n        </form>\r\n)\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('AddMessageForm'));\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'AddMessageForm',\r\n    onSubmitSuccess: afterSubmit,\r\n})(AddMessageForm)\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/MessagesPagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.messagesPage.DialogsData,\r\n        MessagesData: state.messagesPage.MessagesData,\r\n        newMessageBody: state.messagesPage.newMessageBody,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirect\r\n)(Messages)","import React from \"react\";\r\n\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    let FriendsElement = props.friendsData.map(f => <Friend name={f.name}/>);\r\n\r\n    return (\r\n       <div>\r\n           {FriendsElement}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends)\r\n\r\n\r\nexport default FriendsContainer;","import style from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport { Pagination } from 'antd';\r\n\r\n\r\nconst Paginator = ({currentPage, totalItemsCount, onPageChanged, pageSize }) => {\r\n\r\n    // let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n    //\r\n    // let portionCount = Math.ceil(pagesCount / portionSize)\r\n    // let [portionNumber, setPortionNumber] = useState(1)\r\n    // let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    // let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            <Pagination simple defaultCurrent={currentPage} total={totalItemsCount} onChange={onPageChanged} current={currentPage} defaultPageSize={pageSize}/>\r\n        </div>\r\n\r\n\r\n    )\r\n    // <div className={styles.paginator}>\r\n    //     {portionNumber > 1 &&\r\n    //     <button onClick={() => {\r\n    //         setPortionNumber(portionNumber - 1)\r\n    //     }}>PREV</button>}\r\n    //     {pages\r\n    //         .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n    //         .map(p => {\r\n    //             return <span className={currentPage === p && styles.selectPage} key={p} onClick={(e) => {\r\n    //                 onPageChanged(p);\r\n    //             }}>{p}</span>\r\n    //         })}\r\n    //     {portionCount > portionNumber &&\r\n    //     <button onClick={() => {\r\n    //         setPortionNumber(portionNumber + 1)\r\n    //     }}>Next</button>}\r\n    //\r\n    // </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollowUser, followUser}) => {\r\n    return <div className={styles.userInfo}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\"\r\n                             className={styles.userPhoto}/>\r\n                             </NavLink>\r\n                    </div>\r\n        <div>\r\n            <div>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollowUser(user.id)\r\n                                  }}>\r\n                            Unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      followUser(user.id)\r\n                                  }}>\r\n                            Follow</button>\r\n                }\r\n            </div>\r\n\r\n\r\n            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport styles from \"./users.module.css\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n                   <div className={styles.users}>\r\n                       {\r\n                           props.users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                                                      unfollowUser={props.unfollowUser} followUser={props.followUser}/>\r\n                           )\r\n                       }\r\n                   </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {followAPI, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 12,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst UsersReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id));\r\n}\r\n\r\nexport const unfollowUser = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        followUnfollowFlow(dispatch, id, followAPI.unfollowUser.bind(followAPI), unfollow)\r\n    }\r\n}\r\n\r\nexport const followUser = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        followUnfollowFlow(dispatch, id, followAPI.followUser.bind(followAPI), follow)\r\n    }\r\n}\r\n\r\n\r\nexport default UsersReducers;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followUser, requestUsers,\r\n\r\n    setCurrentPage,\r\n    unfollowUser\r\n} from \"../../redux/UsersPageReducer\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/UsersSelectors\";\r\n\r\n\r\nconst UsersContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        const {currentPage, pageSize} = props\r\n        props.getUsers(currentPage, pageSize);\r\n    }, [props.currentPage])\r\n\r\n\r\n   const onPageChanged = (pageNumber) => {\r\n\r\n        props.setCurrentPage(pageNumber);\r\n\r\n        props.getUsers(pageNumber, props.pageSize);\r\n\r\n    }\r\n\r\n        return <>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={props.totalUsersCount}\r\n                   pageSize={props.pageSize}\r\n                   currentPage={props.currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   users={props.users}\r\n                   toggleFollowingProgress={props.toggleFollowingProgress}\r\n                   followingInProgress={props.followingInProgress}\r\n                   followUser={props.followUser}\r\n                   unfollowUser={props.unfollowUser}\r\n\r\n\r\n            />\r\n        </>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setCurrentPage, getUsers: requestUsers, followUser, unfollowUser}),\r\n    AuthRedirect\r\n)(UsersContainer)","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/vlidators/validators\";\r\nimport {login} from \"../../redux/AuthReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"}\r\n                       placeholder={\"email\"}\r\n                       component={Input}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       placeholder={\"password\"}\r\n                       component={Input}\r\n                       validate={[required]}\r\n                       type={\"password\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"}\r\n                       type={\"checkbox\"}\r\n                       component={Input}\r\n                /> <span>remember me</span>\r\n            </div>\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            {captchaUrl &&  <Field name={\"captcha\"}\r\n                                   placeholder={\"Symbols from image\"}\r\n                                   component={Input}\r\n                                   validate={[required]}\r\n            />}\r\n\r\n            <div>\r\n                {error && <div className={s.error}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUser} from \"./AuthReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUser())\r\n    await promise\r\n    dispatch(initializedSuccess())\r\n\r\n\r\n}\r\n\r\n\r\nexport default AppReducer;","\r\nlet initialState = {\r\n    friendsData: [\r\n        {name: \"Dima\"},\r\n        {name: \"Vasya\"},\r\n        {name: \"Gordon\"},\r\n        {name: \"Vladimir\"}\r\n    ]\r\n\r\n};\r\n\r\n\r\nconst SidebarReducer = (state = initialState, action) => {\r\nreturn state\r\n};\r\n\r\nexport default SidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfilePageReducer\";\r\nimport MessagesReducer from \"./MessagesPagesReducer\";\r\nimport SidebarReducer from \"./SidebarReducer\";\r\nimport UsersReducers from \"./UsersPageReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as fromReducer} from 'redux-form'\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    messagesPage: MessagesReducer,\r\n    sidebar: SidebarReducer,\r\n    usersPage: UsersReducers,\r\n    auth: AuthReducer,\r\n    form: fromReducer,\r\n    app: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React, {Suspense, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout} from 'antd';\r\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\r\nimport Preloader from \"./components/common/preloader/preloader\";\r\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/AppReducer\";\r\nimport store from \"./redux/reduxStore\";\r\nimport './App.css';\r\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\r\nconst Settings = React.lazy(() => import (\"./components/Settings/Settings\"));\r\nconst News = React.lazy(() => import (\"./components/News/News\"));\r\n\r\n\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nconst App2 = ({initializeApp, initialized}) => {\r\n\r\n    useEffect(() => {\r\n        initializeApp()\r\n    }, [initializeApp])\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\"><h2>#Stay at Home</h2></div>\r\n                <SidebarContainer/>\r\n            </Sider>\r\n            <Layout>\r\n                <Header className=\"site-layout-sub-header-background\" style={{padding: 0}}>\r\n                    <HeaderContainer/>\r\n                </Header>\r\n                <Content style={{margin: '24px 16px 0'}}>\r\n                    <div className=\"site-layout-background\" style={{padding: 24, minHeight: \"100vh\"}}>\r\n                        <Switch>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n\r\n                            <Route path='/messages'\r\n                                   render={() => <MessagesContainer/>}/>\r\n\r\n                            <Route path='/news'\r\n                                   render={() => <Suspense fallback={<Preloader/>}>\r\n                                       <News/>\r\n                                   </Suspense>}/>\r\n\r\n                            <Route path='/music'\r\n                                   render={() => <Suspense fallback={<Preloader/>}>\r\n                                       <Music/>\r\n                                   </Suspense>}/>\r\n\r\n                            <Route path='/settings'\r\n                                   render={() => <Suspense fallback={<Preloader/>}>\r\n                                       <Settings/>\r\n                                   </Suspense>}/>\r\n\r\n                            <Route path='/friends'\r\n                                   render={() => <FriendsContainer/>}/>\r\n\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n\r\n                            <Route path='/login'\r\n                                   render={() => <LoginPage/>}/>\r\n\r\n                            <Redirect exact from=\"/\" to=\"/profile\"/>\r\n\r\n                            <Route path='*'\r\n                                   render={() => <div>404 NOT FOUND</div>}/>\r\n\r\n                        </Switch>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Created by Ivan Sidarau ©2020</Footer>\r\n            </Layout>\r\n        </Layout>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App2);\r\n\r\nconst MainApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MainApp;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport MainApp from \"./App2\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n    <MainApp/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AvatarAndDescription\":\"ProfileInfo_AvatarAndDescription__3yGEV\",\"contact\":\"ProfileInfo_contact__1ZPh9\",\"ProfileInfo\":\"ProfileInfo_ProfileInfo__2U5q8\",\"ImageButton\":\"ProfileInfo_ImageButton__10s-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__3tK8V\",\"link\":\"Sidebar_link__1QDzM\",\"active\":\"Sidebar_active__h1Sbz\",\"friends\":\"Sidebar_friends__2cw99\",\"pageConstrain\":\"Sidebar_pageConstrain__lESm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2KApp\",\"users\":\"users_users__3aAVp\",\"userInfo\":\"users_userInfo___ZnPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__14LW4\",\"likes\":\"Post_likes__1-SBD\",\"button\":\"Post_button__bDfp2\",\"message\":\"Post_message__3Oyep\"};"],"sourceRoot":""}